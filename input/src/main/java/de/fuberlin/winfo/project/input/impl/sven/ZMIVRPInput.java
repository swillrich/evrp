package de.fuberlin.winfo.project.input.impl.sven;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import de.fuberlin.winfo.project.FormatConv;
import de.fuberlin.winfo.project.Locatables;
import de.fuberlin.winfo.project.Log;
import de.fuberlin.winfo.project.Utils;
import de.fuberlin.winfo.project.Utils.ProgressBar;
import de.fuberlin.winfo.project.input.VRPInput;
import de.fuberlin.winfo.project.input.impl.sven.zmidistancematrix.ZMIJsonConverter;
import de.fuberlin.winfo.project.input.impl.sven.zmidistancematrix.model.ZMIEdge;
import de.fuberlin.winfo.project.model.network.Arc;
import de.fuberlin.winfo.project.model.network.Customer;
import de.fuberlin.winfo.project.model.network.Depot;
import de.fuberlin.winfo.project.model.network.Duration;
import de.fuberlin.winfo.project.model.network.Locatable;
import de.fuberlin.winfo.project.model.network.Network;
import de.fuberlin.winfo.project.model.network.Order;
import de.fuberlin.winfo.project.model.network.UseCase;
import de.fuberlin.winfo.project.model.network.Vertex;
import de.fuberlin.winfo.project.model.network.impl.ArcImpl;
import de.fuberlin.winfo.project.model.network.impl.NetworkFactoryImpl;
import de.fuberlin.winfo.project.model.network.impl.VertexImpl;

public class ZMIVRPInput implements VRPInput {
	private CSV2ObjMapper mapper = null;
	private File zippedAndSerializedDM;
	private NetworkFactoryImpl networkFactory = new NetworkFactoryImpl();
	private Locatables locatables;
	private Network network;
	private String description;

	public ZMIVRPInput(String description) throws Exception {
		mapper = new CSV2ObjMapper(InputFilesBundles.vehicleFile, InputFilesBundles.customerFile,
				InputFilesBundles.depotFile, InputFilesBundles.useCaseFile);
		this.zippedAndSerializedDM = InputFilesBundles.zippedAndSerializedDM;
		locatables = mapper.getLocatables();
		network = getNetwork();
		this.description = description;
	}

	@Override
	public List<UseCase> getUseCases() {
		return mapper.getUseCaseList();
	}

	@Override
	public int getVerticesMaximum() {
		return 1000;
	}

	@Override
	public String getVisualizationServer() {
		return "http://localhost:8080";
	}

	@Override
	public int getDesiredProcedure() {
		return 0;
	}

	@Override
	public Network getNetwork() {
		if (network != null) {
			return network;
		}
		Network network = networkFactory.createNetwork();
		Log.info(Log.DATA_IMPORT, "Build network");

		try {
			Log.info(Log.DATA_IMPORT, "Read in the entire distance matrix ...");
			List<ZMIEdge> pojos = ZMIJsonConverter
					.deseriaizeZippedZMIEdges(new FileInputStream(this.zippedAndSerializedDM));
			Log.info(Log.DATA_IMPORT, "Generate vertices ...");
			Vertex[] vertices = inflateVertices(network);
			Log.info(Log.DATA_IMPORT, "Connect distance matrix with vertices ...");
			Arc[][] multidimensionalEdgeArray = getDistanceMatrixAsArray(pojos, getLocatables().size());
			multidimensionalEdgeArray = increaseArcsToFitAllOrders(network, multidimensionalEdgeArray, vertices);

			if (getVerticesMaximum() > 0) {
				Log.info(Log.DATA_IMPORT, "Remove unused arcs and vertices");
				Set<Vertex> verticesSet = new TreeSet<Vertex>(new Comparator<Vertex>() {
					@Override
					public int compare(Vertex arg0, Vertex arg1) {
						return Integer.compare(arg0.hashCode(), arg1.hashCode());
					}
				});
				verticesSet.addAll(network.getVertices());
				getLocatables().removeIf(l -> l instanceof Customer
						&& ((Customer) l).getOrders().stream().filter(o -> verticesSet.contains(o)).count() == 0);
				getLocatables().getCustomer().forEach(c -> c.getOrders().removeIf(o -> !verticesSet.contains(o)));
			}

			Log.info(Log.DATA_IMPORT,
					network.getVertices().size() + " vertices generated (" + getLocatables().size() + " customer)");

			network.getLocatables().addAll(getLocatables().getCustomer());

			// setRandomizedTimeWindows(network);
//			addRandomizedTimeWindows(network, 0.2);

			return network;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	public void addRandomizedTimeWindows(Network network, double d) throws IOException {
		System.out.println("without tw prev: "
				+ network.getVertices().stream().filter(v -> v instanceof Order).map(v -> (Order) v)
						.filter(o -> o.getTimeWindow().getStartInSec() == 0
								&& o.getTimeWindow().getEndInSec() == 3600 * 24)
						.count()
				+ " / " + network.getVertices().stream().filter(v -> v instanceof Order).count());
		List<Order> list = network.getVertices().stream().filter(v -> v instanceof Order).map(v -> (Order) v)
				.filter(o -> o.getTimeWindow().getStartInSec() == 0 && o.getTimeWindow().getEndInSec() == 3600 * 24)
				.collect(Collectors.toList());
		list = list.subList(0, (int) (list.size() * d));

		FileInputStream stream = new FileInputStream(InputFilesBundles.timeWindows);
		BufferedReader reader = new BufferedReader(new InputStreamReader(stream));

		for (Order o : list) {
			Duration dur = networkFactory.createDuration();
			String readLine = reader.readLine();
			String[] twValues = readLine.split(",");
			dur.setStartInSec(Integer.valueOf(twValues[0]));
			dur.setEndInSec(dur.getStartInSec() + Integer.valueOf(twValues[1]));
			o.setTimeWindow(dur);
			String string = FormatConv.asDuration(dur.getEndInSec() * 1000, "");
		}

		System.out.println("without tw after: "
				+ network.getVertices().stream().filter(v -> v instanceof Order).map(v -> (Order) v)
						.filter(o -> o.getTimeWindow().getStartInSec() == 0
								&& o.getTimeWindow().getEndInSec() == 3600 * 24)
						.count()
				+ " / " + network.getVertices().stream().filter(v -> v instanceof Order).count());
	}

	private void setRandomizedTimeWindows(Network network) throws IOException {
		FileInputStream stream = new FileInputStream(InputFilesBundles.timeWindows);
		BufferedReader reader = new BufferedReader(new InputStreamReader(stream));
		for (int i = 0; i < network.getVertices().size(); i++) {
			Vertex vertex = network.getVertices().get(i);
			if (vertex instanceof Order) {
				Order o = (Order) vertex;
				Duration dur = networkFactory.createDuration();
				String readLine = reader.readLine();
				String[] twValues = readLine.split(",");
				dur.setStartInSec(Integer.valueOf(twValues[0]));
				dur.setEndInSec(dur.getStartInSec() + Integer.valueOf(twValues[1]));
				o.setTimeWindow(dur);
			}
		}
	}

	/*
	 * HELPER METHODS
	 */

	private Arc[][] increaseArcsToFitAllOrders(Network network, Arc[][] prevArr, Vertex[] vertices) {
		TreeMap<Locatable, Integer> treeMap = new TreeMap<Locatable, Integer>(new Comparator<Locatable>() {

			@Override
			public int compare(Locatable o1, Locatable o2) {
				return Integer.compare(o1.hashCode(), o2.hashCode());
			}
		});
		Locatables loc = getLocatables();
		for (int i = 0; i < loc.size(); i++) {
			treeMap.put(loc.get(i), i);
		}

		TreeMap<Vertex, LinkedList<Arc>[]> vertexMap = new TreeMap<Vertex, LinkedList<Arc>[]>(new Comparator<Vertex>() {
			@Override
			public int compare(Vertex o1, Vertex o2) {
				return Integer.compare(o1.getId(), o2.getId());
			}
		});
		Arrays.stream(vertices)
				.forEach(v -> vertexMap.put(v, new LinkedList[] { new LinkedList<Arc>(), new LinkedList<Arc>() }));
		Arc[][] newArcArr = new ArcImpl[vertices.length][vertices.length];
		ProgressBar showProgress = Utils.showProgress(vertices.length);
		for (int i = 0; i < vertices.length; i++) {
			showProgress.update(i);
			for (int j = 0; j < vertices.length; j++) {
				Vertex src = vertices[i];
				Vertex end = vertices[j];

				Locatable srcL;
				if (src instanceof Order) {
					srcL = ((Order) src).getReceiver();
				} else {
					srcL = (Depot) src;
				}
				int srcLIndex = treeMap.get(srcL);

				Locatable endL;
				if (end instanceof Order) {
					endL = ((Order) end).getReceiver();
				} else {
					endL = (Depot) end;
				}
				int endLIndex = treeMap.get(endL);

				Arc prevArc = prevArr[srcLIndex][endLIndex];
				Arc copy = networkFactory.createArc();
				copy.setStart(src);
				copy.setEnd(end);
				copy.setId(i + "-" + j);
				copy.setTime(prevArc.getTime());
				copy.setDistance(prevArc.getDistance());
				copy.setEnergyMin(prevArc.getEnergyMin());
				copy.setEnergyMax(prevArc.getEnergyMax());
				newArcArr[i][j] = copy;
				vertexMap.get(vertices[i])[0].addLast(copy);
				vertexMap.get(vertices[j])[1].addLast(copy);
			}
		}
		showProgress.update(vertices.length);
		showProgress.done();

		for (Vertex v : vertexMap.keySet()) {
			LinkedList<Arc>[] lists = vertexMap.get(v);
			v.getArcOut().addAll(lists[0]);
			v.getArcIn().addAll(lists[1]);
			network.getArcs().addAll(lists[0]);
			network.getArcs().addAll(lists[1]);
		}
		return newArcArr;
	}

	private Arc[][] getDistanceMatrixAsArray(List<ZMIEdge> zmiEdges, int n) throws Exception {
		Arc[][] matrix = new ArcImpl[n][n];
		Iterator<ZMIEdge> iterator = zmiEdges.iterator();
		while (iterator.hasNext()) {
			ZMIEdge zmiEdge = iterator.next();
			int originId = zmiEdge.getOriginId();
			int destId = zmiEdge.getDestId();
			int distance = zmiEdge.getDistance();
			int time = zmiEdge.getTime();
			int energyMin = zmiEdge.getEnergyMin();
			int energyMax = zmiEdge.getEnergyMax();
			Arc arc = networkFactory.createArc();
			matrix[originId][destId] = arc;
			arc.setTime(time);
			arc.setDistance(distance);
			arc.setId(originId + "-" + destId);
			arc.setEnergyMin(energyMin);
			arc.setEnergyMax(energyMax);
		}
		return matrix;
	}

	private Vertex[] inflateVertices(Network network) {
		List<Order> orders = getLocatables().getAllOrders();
		if (getVerticesMaximum() > 0) {
			orders = randomizeByPreselectedRandomSequence(orders);
		}
		Vertex[] vertices = new VertexImpl[orders.size() + 1];
		ProgressBar showProgress = Utils.showProgress(vertices.length);
		vertices[0] = getLocatables().getDepot();
		vertices[0].setId(0);
		for (int i = 1; i < vertices.length; i++) {
			showProgress.update(i);
			vertices[i] = orders.get(i - 1);
			vertices[i].setId(i);
		}
		showProgress.update(vertices.length);
		showProgress.done();
		network.getVertices().addAll(Arrays.asList(vertices));
		return vertices;
	}

	private List<Order> randomizeByPreselectedRandomSequence(List<Order> orders) {
		ArrayList<Order> newList = new ArrayList<Order>();
		while (newList.size() < getVerticesMaximum()) {
			newList.add(orders.get(randomOrderIds[newList.size()]));
		}
		return newList;
	}

	private List<Order> randomizeByNewRandomSequence(List<Order> orders) {
		Random r = new Random();
		List<Order> oL = new ArrayList<Order>(orders);
		ArrayList<Order> newList = new ArrayList<Order>();
		while (newList.size() <= getVerticesMaximum()) {
			Order remove = oL.remove(r.nextInt(oL.size()));
			newList.add(remove);
		}
		orders = newList;
		return orders;
	}

	private void printGeneratedRandomSequence(List<Order> orders) {
		Random r = new Random();
		List<Integer> target = new ArrayList<Integer>();
		List<Integer> source = new ArrayList<Integer>();
		IntStream.range(0, orders.size()).forEach(i -> source.add(i));
		while (!source.isEmpty()) {
			int i = source.remove(r.nextInt(source.size()));
			target.add(i);
		}
		System.out.println();
		target.forEach(i -> System.out.print(i + ", "));
		System.out.println();
	}

	@Override
	public Locatables getLocatables() {
		return locatables;
	}

	private static int[] randomOrderIds = { 4441, 4420, 3014, 3957, 1560, 3910, 771, 1884, 322, 911, 2377, 759, 4639,
			1994, 2881, 1009, 196, 5030, 3414, 4841, 2473, 4032, 2657, 4333, 4831, 290, 3918, 815, 2488, 2884, 3628,
			195, 1439, 4888, 3983, 3942, 423, 4310, 3673, 1070, 3576, 513, 354, 574, 4206, 3158, 3912, 1495, 1864, 1966,
			554, 1530, 3682, 4271, 3079, 1353, 801, 5083, 4028, 2312, 2340, 988, 2568, 3795, 856, 4346, 4943, 618, 1501,
			871, 4169, 1627, 4303, 2358, 3735, 2536, 3660, 2797, 683, 4364, 4417, 3781, 2152, 4850, 1488, 2504, 2416,
			744, 1139, 4003, 1722, 5101, 3164, 5015, 3005, 1688, 862, 2124, 1826, 4792, 4829, 740, 179, 2534, 2334,
			2087, 854, 3235, 343, 4977, 2603, 2481, 1961, 3144, 5095, 3473, 3582, 3009, 2894, 4689, 22, 4660, 2585,
			3051, 879, 1019, 1044, 2174, 4592, 3169, 401, 4400, 1422, 1066, 1820, 128, 2011, 2856, 1508, 1658, 1354,
			4180, 3429, 2565, 4161, 3305, 2515, 2647, 1710, 3061, 3526, 1563, 200, 3600, 968, 2265, 2400, 206, 4621,
			1670, 4999, 861, 266, 4807, 4090, 819, 602, 2757, 4833, 214, 2791, 2452, 2915, 1160, 3318, 1336, 616, 821,
			3463, 4748, 3206, 1135, 600, 3523, 4931, 689, 3417, 2865, 2500, 100, 3225, 692, 4501, 3997, 1671, 3434,
			3675, 4773, 2018, 2985, 570, 5116, 2643, 83, 1748, 3715, 3208, 6, 481, 2620, 1146, 690, 4816, 5044, 123,
			2268, 630, 2893, 4730, 1571, 898, 3403, 3971, 4076, 1502, 1814, 3768, 2868, 393, 894, 540, 4762, 3563, 2489,
			1725, 1855, 2426, 197, 652, 2148, 1960, 676, 3259, 3140, 4159, 2525, 4091, 3453, 405, 3789, 1518, 3037,
			2483, 468, 2697, 3734, 4096, 2591, 2240, 4968, 1385, 3410, 2372, 138, 1323, 4272, 4930, 1481, 1542, 1127,
			688, 718, 791, 3499, 3377, 722, 2800, 1934, 2926, 2202, 4655, 1921, 3248, 3841, 27, 1886, 4951, 1190, 3875,
			5035, 1060, 3033, 3532, 2699, 2694, 2601, 3787, 1860, 2785, 488, 1440, 3261, 1613, 1787, 2355, 943, 2708,
			77, 4444, 2361, 4165, 4434, 1885, 1395, 3336, 1380, 5046, 1833, 18, 3120, 3328, 2514, 1401, 2349, 4967,
			4737, 3002, 766, 3026, 3339, 1451, 4393, 4709, 1595, 517, 1780, 493, 2674, 4746, 4835, 503, 2702, 19, 2080,
			509, 4251, 626, 4700, 3496, 4783, 748, 1637, 3645, 3964, 62, 1738, 3610, 3190, 3520, 2511, 623, 3712, 3991,
			1531, 2660, 4853, 1032, 1836, 2429, 3094, 2709, 1245, 1344, 4158, 2652, 2071, 5117, 3397, 3036, 4296, 584,
			1857, 4217, 2330, 1172, 3755, 341, 1235, 2079, 4673, 2761, 2056, 23, 1999, 1346, 2875, 3698, 2653, 3265,
			1792, 2088, 4758, 5124, 765, 2362, 2848, 1157, 2673, 986, 281, 2052, 2595, 381, 1771, 1475, 2517, 2450, 636,
			4493, 4289, 4643, 3093, 2812, 1004, 924, 2618, 2363, 1156, 4373, 5075, 1770, 2068, 2903, 3578, 1719, 1551,
			3522, 713, 3814, 2251, 4877, 5110, 4940, 4379, 5000, 2318, 3189, 1109, 2777, 462, 2447, 3327, 1716, 1870,
			1759, 2825, 1141, 2357, 476, 3493, 2245, 3657, 2533, 1883, 2772, 1187, 2728, 4323, 3629, 1091, 289, 944,
			233, 2904, 377, 1243, 3478, 751, 1686, 2890, 4443, 4173, 1862, 3196, 693, 4557, 3889, 511, 4982, 3883, 3303,
			167, 4088, 3738, 543, 2491, 1578, 1205, 5037, 4496, 4614, 3510, 555, 1273, 3829, 4071, 3534, 2553, 1269,
			2385, 154, 291, 1823, 4388, 483, 1935, 997, 1789, 3723, 914, 3309, 299, 3059, 1606, 3171, 3641, 3233, 1856,
			4412, 2109, 2923, 3800, 4876, 4082, 3203, 207, 182, 2934, 1258, 3872, 2216, 3934, 5052, 3592, 3066, 4226,
			1662, 5026, 4413, 1305, 995, 4375, 1217, 2687, 1779, 2658, 3617, 2419, 3705, 1666, 2434, 964, 4150, 2041,
			4153, 3916, 68, 1020, 1111, 2310, 1076, 3314, 1038, 2364, 2004, 3296, 4781, 4145, 4622, 539, 2798, 213,
			5049, 4790, 832, 4404, 3952, 1294, 4901, 725, 3228, 4459, 1942, 5050, 2598, 3324, 1102, 2623, 1137, 3379,
			3399, 265, 510, 3291, 1802, 1720, 2760, 4908, 675, 212, 3907, 1134, 4095, 2304, 434, 3114, 4130, 4181, 2263,
			87, 4918, 2072, 4950, 2444, 3533, 3175, 1226, 2998, 4796, 3503, 160, 1644, 4928, 2759, 1797, 577, 3080,
			2215, 2309, 140, 2754, 4232, 1950, 4979, 4998, 82, 355, 1275, 4348, 3700, 1873, 1162, 868, 2710, 1436, 254,
			1549, 3898, 2549, 1897, 3022, 1572, 4457, 2635, 4156, 3857, 3869, 1493, 852, 1786, 4313, 2210, 3984, 4653,
			2902, 3908, 2740, 450, 3545, 3519, 4440, 72, 1798, 611, 2826, 351, 2332, 4446, 1982, 115, 1984, 5016, 14,
			835, 3564, 1974, 469, 93, 2736, 3448, 2146, 3603, 4560, 3717, 3501, 3280, 3834, 3307, 3329, 3271, 314, 838,
			3044, 1603, 3546, 4063, 2057, 242, 4050, 2209, 610, 2908, 1334, 3832, 3103, 449, 456, 4197, 47, 313, 3195,
			3433, 3558, 1593, 1212, 4629, 3116, 4124, 1784, 2829, 2471, 4468, 4874, 2100, 4978, 878, 4632, 3975, 3637,
			1801, 2866, 4910, 1566, 1263, 120, 1215, 2155, 1564, 753, 2562, 2575, 1347, 339, 3362, 2324, 954, 795, 4132,
			2836, 817, 1320, 1889, 1573, 1591, 4034, 3446, 2418, 3155, 2066, 1837, 4698, 921, 1340, 892, 3015, 4677,
			1867, 1890, 3866, 2936, 1987, 3607, 3497, 3989, 814, 1310, 3549, 2952, 2563, 2303, 3593, 5064, 2616, 4193,
			2703, 3779, 3785, 3216, 1289, 2206, 2578, 3482, 4669, 612, 95, 1828, 1907, 1803, 4428, 3882, 571, 3007,
			2404, 2211, 3405, 4535, 4205, 4691, 2413, 2069, 3304, 1257, 4467, 1201, 363, 4757, 2184, 8, 3183, 1641,
			2505, 4572, 4607, 2892, 4858, 4554, 3904, 3679, 2219, 703, 1953, 3264, 4024, 5125, 2137, 3813, 1476, 2969,
			4450, 3688, 952, 4137, 4225, 4293, 3547, 474, 228, 3237, 2063, 1126, 4257, 3122, 1760, 1584, 1272, 1625,
			1443, 459, 2756, 4914, 958, 4729, 4383, 1744, 2558, 1492, 4148, 1917, 331, 4209, 4452, 1371, 3449, 774,
			3778, 1337, 2484, 3874, 36, 5115, 402, 4594, 2608, 2573, 4359, 1729, 1805, 3953, 1968, 904, 805, 368, 146,
			4220, 1393, 2816, 3695, 492, 4686, 3298, 301, 2508, 2506, 764, 35, 1970, 1224, 4961, 2544, 2388, 4337, 3003,
			375, 4462, 2577, 2365, 4384, 425, 2737, 874, 1364, 3316, 4515, 3521, 3131, 463, 3055, 3947, 3168, 2460,
			2120, 886, 360, 4216, 1645, 4081, 255, 3504, 432, 4838, 2605, 3643, 3460, 1933, 3770, 1291, 505, 2889, 2288,
			1117, 3632, 497, 673, 4270, 1781, 2482, 3956, 4414, 388, 4079, 1842, 4101, 1175, 807, 2815, 2978, 897, 1198,
			3486, 4431, 775, 1599, 1361, 2402, 3985, 2941, 3254, 3616, 4140, 139, 4591, 4107, 3955, 3085, 3121, 1085,
			866, 1118, 3933, 3664, 4519, 3201, 421, 2846, 201, 2722, 1005, 4619, 3160, 2880, 2058, 826, 2180, 883, 1402,
			1756, 1002, 306, 297, 1452, 828, 635, 827, 4712, 4176, 1639, 4606, 258, 4780, 851, 1967, 1014, 978, 3030,
			1136, 669, 4896, 1726, 3831, 4119, 1752, 3635, 3631, 1277, 4852, 756, 1824, 4366, 903, 2539, 1545, 797,
			4703, 1483, 2048, 3806, 2133, 4550, 4683, 4508, 4944, 1997, 2877, 2671, 422, 2230, 2344, 4581, 2680, 4693,
			2937, 243, 4922, 633, 1178, 902, 655, 4190, 4921, 33, 4952, 4278, 1423, 4286, 3967, 2771, 928, 1430, 4415,
			1568, 3536, 2597, 3567, 2642, 1145, 4128, 3739, 4832, 12, 4788, 2291, 3333, 2587, 170, 4611, 4439, 298,
			2854, 2472, 2535, 370, 1877, 2492, 3819, 3891, 1312, 2654, 1285, 5003, 4149, 1902, 4769, 1271, 4311, 1553,
			1980, 4472, 3870, 741, 4035, 3974, 662, 4696, 2399, 4716, 1619, 4799, 2394, 4211, 4368, 4029, 3773, 1290,
			4920, 4343, 4505, 4105, 2201, 1322, 560, 3861, 1728, 4697, 4778, 931, 1138, 1036, 2164, 247, 3255, 4752,
			4125, 451, 2218, 2276, 3050, 1739, 1799, 4485, 4588, 4875, 251, 2247, 4736, 4988, 379, 1311, 3775, 2496,
			3069, 5103, 1742, 4236, 2417, 230, 3821, 888, 830, 648, 1056, 2870, 3487, 3406, 2796, 548, 2233, 4822, 2774,
			4198, 109, 3485, 984, 3097, 787, 239, 1281, 2156, 4991, 2543, 3986, 11, 1871, 523, 1919, 3330, 1301, 919,
			1024, 1558, 193, 475, 4179, 81, 4813, 1926, 2464, 4650, 3506, 1370, 663, 2046, 1110, 1745, 2876, 1255, 349,
			155, 3880, 1438, 1216, 1790, 2818, 5062, 2678, 629, 4924, 2028, 2925, 2583, 3826, 2085, 587, 3716, 4281,
			1947, 4155, 4200, 1998, 2093, 993, 4014, 4810, 4372, 4331, 4996, 685, 2711, 3357, 3338, 621, 122, 1633, 5,
			1158, 4659, 3959, 4880, 1796, 1817, 1381, 1681, 933, 4620, 1600, 2538, 4370, 2257, 935, 2547, 4048, 3539,
			3803, 1646, 1132, 4031, 235, 2081, 2172, 3402, 1863, 431, 3733, 132, 4429, 3565, 2751, 2633, 4542, 711, 316,
			2509, 5023, 1847, 3212, 3356, 1362, 3041, 1233, 850, 2287, 1308, 3538, 4618, 2442, 1065, 1149, 3686, 4282,
			4915, 110, 2935, 2989, 3285, 2999, 4259, 1084, 3620, 3202, 3515, 2241, 844, 1487, 3109, 2061, 1636, 1841,
			5036, 3818, 4523, 1767, 4283, 1478, 4297, 4110, 1804, 1106, 2441, 4492, 325, 1807, 3077, 1104, 3174, 1349,
			3170, 480, 2619, 960, 3001, 2835, 1825, 1850, 650, 4308, 176, 5109, 3856, 2746, 305, 5045, 1723, 4887, 499,
			3064, 4369, 2006, 365, 2804, 2401, 544, 790, 1458, 4842, 783, 1793, 1704, 553, 1446, 3418, 302, 1741, 1399,
			3256, 5081, 1653, 3614, 1040, 848, 3828, 967, 4045, 1849, 730, 1338, 2682, 2857, 858, 956, 5104, 4873, 4157,
			2906, 4597, 608, 3359, 900, 5013, 250, 3252, 3387, 3672, 5024, 3890, 658, 820, 3702, 3185, 1331, 1938, 124,
			729, 2811, 2614, 4120, 4957, 2707, 1815, 4652, 5080, 3320, 2672, 4487, 1640, 1609, 5040, 3554, 3926, 1753,
			4834, 3468, 4135, 1185, 288, 1445, 3150, 727, 2960, 3662, 4723, 1264, 3104, 3308, 545, 1631, 5038, 4617,
			3661, 1463, 348, 4344, 3864, 490, 4019, 640, 277, 1486, 1428, 270, 1931, 326, 3464, 5029, 4086, 4966, 5090,
			708, 4645, 3580, 1891, 241, 3730, 5113, 4426, 2749, 896, 937, 1718, 1300, 2143, 3459, 4255, 1228, 4815, 733,
			4825, 2405, 323, 466, 1046, 1819, 4072, 2194, 1660, 175, 1254, 2976, 918, 3677, 1050, 1736, 4511, 2971,
			1939, 4741, 811, 950, 565, 1969, 453, 2767, 1964, 4275, 2347, 4860, 4867, 4644, 5060, 1043, 1279, 726, 2664,
			2966, 2763, 867, 2014, 3098, 3948, 3263, 3134, 2423, 3108, 2609, 3783, 2140, 3083, 3250, 4106, 3439, 2782,
			3275, 2244, 2096, 4326, 3205, 4495, 2108, 525, 2162, 4307, 4524, 4363, 4662, 4803, 5033, 2458, 5098, 870,
			884, 3732, 2548, 1903, 3903, 2127, 936, 5089, 1513, 3012, 3692, 3267, 3178, 3808, 3135, 3972, 114, 1516,
			3945, 2114, 420, 2713, 2725, 2380, 3087, 1526, 4210, 1546, 3544, 2465, 4941, 187, 4447, 4651, 4380, 3262,
			1638, 4766, 4141, 4664, 905, 1539, 108, 3181, 1129, 5010, 3570, 4871, 3029, 4755, 2560, 4609, 2580, 4628,
			3045, 1506, 1800, 2622, 2422, 2383, 411, 4280, 4292, 28, 4776, 1896, 4862, 121, 940, 489, 2478, 1087, 625,
			1144, 3288, 443, 4710, 3133, 3028, 4143, 1468, 461, 2790, 4117, 2546, 2439, 5082, 3495, 2808, 4754, 4058,
			4522, 2374, 1214, 3270, 4518, 113, 3604, 129, 712, 4009, 3551, 4353, 3384, 3071, 4701, 3940, 3529, 3509,
			2963, 4770, 4005, 3366, 1415, 2154, 2328, 4300, 350, 4276, 3391, 3415, 3241, 2668, 2956, 4098, 2645, 945,
			4053, 4985, 4253, 951, 981, 4756, 1618, 2621, 334, 3396, 2704, 908, 4151, 4726, 1978, 2596, 208, 5093, 700,
			3147, 2278, 2379, 5077, 3326, 3230, 1115, 2951, 4642, 4980, 833, 3824, 606, 2684, 2862, 853, 3142, 3215,
			2368, 2229, 686, 562, 2122, 1074, 1237, 3690, 588, 760, 2700, 1195, 3843, 3946, 5078, 2167, 3836, 2323,
			1140, 4154, 2225, 2034, 4536, 309, 3579, 2130, 3559, 2859, 4579, 57, 186, 3876, 477, 1922, 1944, 4263, 226,
			2970, 3223, 2045, 2931, 2493, 3500, 3268, 578, 938, 2918, 2602, 975, 3321, 3767, 296, 4001, 4787, 311, 4138,
			3627, 3360, 527, 2840, 4649, 1740, 1607, 4436, 2570, 2117, 2905, 1614, 2300, 792, 3771, 1550, 3284, 85,
			5120, 2781, 3855, 1692, 4164, 915, 3552, 2586, 4486, 777, 3199, 2474, 2502, 1382, 3557, 1589, 3745, 63,
			2105, 4036, 2592, 3938, 1261, 342, 1596, 3475, 3432, 552, 5002, 435, 4133, 2789, 4561, 4865, 2159, 697,
			4883, 2739, 5051, 2874, 1054, 2016, 2486, 845, 3062, 2787, 3852, 736, 638, 4830, 698, 150, 875, 2631, 2189,
			3040, 2820, 4208, 5058, 876, 4123, 117, 191, 5107, 4227, 3815, 1500, 1231, 2571, 3794, 4405, 4202, 671,
			1306, 1538, 1031, 2986, 398, 1192, 1661, 2734, 5032, 1649, 4855, 4121, 444, 2786, 2494, 1590, 1554, 2147,
			3810, 4350, 3954, 4715, 4504, 4909, 4279, 4122, 2607, 1147, 4349, 3766, 3760, 2191, 2625, 3363, 1092, 1417,
			4324, 3095, 1892, 3143, 4432, 4623, 2326, 2974, 1167, 414, 2055, 3839, 1358, 4529, 1766, 4964, 4893, 3754,
			4317, 4656, 1372, 3243, 4571, 2119, 2681, 607, 2044, 1229, 3892, 1225, 987, 1920, 269, 3894, 190, 656, 1536,
			178, 4734, 134, 4986, 2454, 4113, 4884, 5025, 3437, 174, 684, 2599, 2412, 3676, 4238, 4247, 4069, 2541,
			2455, 1408, 1241, 5056, 3367, 4387, 1298, 4408, 4037, 2860, 2371, 1587, 5031, 1924, 4844, 1293, 3346, 3752,
			3707, 672, 1410, 2929, 4046, 4398, 3909, 3105, 2390, 284, 3167, 4406, 4694, 2617, 3594, 721, 2589, 1, 3913,
			3226, 3057, 447, 2451, 2615, 1453, 2780, 3721, 2099, 171, 3586, 2910, 2183, 2630, 1313, 743, 2579, 2325,
			2084, 1213, 1778, 2690, 3651, 1624, 2924, 3830, 4889, 3596, 1095, 1090, 754, 3978, 3191, 594, 2973, 546,
			2572, 1479, 2181, 59, 2282, 2341, 831, 4474, 3921, 4162, 464, 2092, 573, 2062, 927, 4713, 4231, 4327, 4970,
			1965, 163, 2292, 3644, 1262, 5014, 1171, 4015, 1642, 4345, 4284, 4234, 1030, 307, 679, 1326, 96, 2683, 2828,
			4728, 581, 118, 3900, 1979, 593, 3187, 2039, 2965, 2074, 21, 3958, 4126, 4544, 3244, 3649, 3914, 2153, 550,
			245, 5063, 4065, 1821, 4506, 1165, 1379, 596, 3844, 3227, 218, 71, 3088, 3221, 857, 1838, 3624, 1496, 601,
			1795, 770, 2742, 156, 4882, 4538, 4170, 3295, 4827, 2507, 3491, 4, 3358, 3099, 3101, 4593, 4334, 4455, 4178,
			1514, 1421, 1431, 2519, 4819, 222, 3623, 3193, 3639, 3513, 715, 3102, 4491, 535, 3331, 4397, 1774, 4868,
			818, 1519, 4357, 3981, 0, 877, 2025, 181, 1432, 4021, 3764, 5057, 3315, 1473, 382, 2688, 4845, 4017, 3611,
			4222, 4403, 3561, 3928, 3032, 4894, 3893, 3678, 111, 1047, 4007, 591, 3162, 3112, 3630, 1866, 761, 2026,
			2944, 294, 2659, 1576, 4657, 1875, 869, 2220, 837, 1763, 3084, 3796, 3663, 1094, 327, 4973, 1504, 3848, 92,
			3749, 3966, 2123, 4204, 823, 2457, 2610, 4269, 929, 2067, 4228, 4103, 691, 2964, 4054, 3053, 4262, 1202,
			4559, 4556, 3132, 1209, 3885, 2594, 1082, 1013, 735, 223, 949, 3725, 1099, 4461, 4981, 2333, 1698, 3993,
			3973, 1768, 4821, 4201, 4912, 4814, 2285, 4418, 3753, 1053, 909, 457, 4298, 3671, 757, 2360, 2001, 4956,
			2186, 5061, 3788, 2453, 4470, 3998, 3034, 1386, 335, 592, 2040, 3936, 644, 996, 2141, 2932, 1899, 440, 3980,
			391, 4471, 1113, 127, 172, 5076, 1124, 1709, 273, 147, 1459, 2758, 4917, 1314, 1063, 2984, 192, 707, 2435,
			410, 1811, 531, 3115, 3587, 3668, 2259, 2166, 2297, 2476, 1150, 2606, 2938, 4994, 4018, 4900, 2274, 3332,
			1219, 2221, 1977, 3353, 605, 396, 4881, 2424, 3119, 4919, 2406, 1208, 1068, 252, 1360, 739, 3312, 1844,
			2743, 1511, 1246, 262, 4553, 1200, 2810, 2329, 1743, 4042, 3372, 2267, 3750, 3474, 3440, 1418, 4416, 3949,
			3518, 74, 2522, 3502, 406, 4301, 1679, 2033, 4743, 4849, 1592, 40, 4067, 4534, 3799, 4194, 4335, 687, 3622,
			3310, 1077, 285, 2231, 1616, 4062, 4983, 1103, 1227, 4341, 2414, 1827, 2768, 1378, 549, 2980, 2982, 3924,
			3194, 1912, 1905, 1155, 4312, 169, 1332, 3589, 2217, 590, 1176, 582, 3229, 2861, 2624, 4184, 4266, 2627,
			3659, 4861, 4108, 4052, 2019, 1356, 2480, 3854, 4215, 2149, 188, 4473, 2030, 185, 767, 439, 1848, 4759,
			2649, 1667, 3382, 1577, 3726, 3879, 3246, 4144, 2629, 3049, 974, 706, 2433, 887, 5021, 849, 4926, 211, 24,
			2498, 4340, 502, 4797, 41, 2917, 2195, 1776, 4131, 1910, 491, 5085, 2207, 5048, 5041, 3590, 3961, 487, 1544,
			3092, 4057, 643, 1197, 728, 65, 1221, 137, 4347, 4395, 4851, 2641, 804, 1702, 3000, 180, 3238, 2255, 980,
			4376, 4516, 4454, 2855, 4000, 2126, 3220, 4134, 841, 1280, 177, 4954, 4526, 2940, 2193, 3242, 3354, 3213,
			3340, 1861, 2138, 44, 4051, 4026, 1169, 1457, 4601, 855, 1581, 4061, 4478, 4719, 408, 779, 2313, 300, 4049,
			3960, 4351, 5005, 148, 1986, 3484, 278, 1962, 3249, 3383, 4528, 1384, 1868, 4551, 263, 1437, 1918, 2990,
			1484, 2286, 999, 4219, 1368, 3438, 1069, 2339, 3915, 1220, 4503, 4735, 536, 2916, 86, 1330, 357, 3335, 437,
			1701, 4476, 2070, 407, 1048, 4532, 2933, 768, 1888, 279, 1895, 2226, 4458, 2425, 1812, 3374, 4935, 859,
			3822, 1773, 2839, 473, 3615, 1525, 1630, 4118, 2712, 2745, 1025, 4249, 3780, 1424, 4936, 2102, 547, 4445,
			710, 932, 1925, 472, 654, 2487, 4836, 1529, 3919, 3056, 3612, 530, 3751, 4963, 3157, 4309, 2574, 3072, 889,
			1405, 2753, 4070, 1975, 1806, 4077, 4221, 1105, 2145, 1990, 1634, 800, 275, 2032, 4354, 661, 901, 1916,
			4577, 970, 4962, 2393, 3490, 1533, 2946, 1039, 3710, 5094, 4654, 2667, 1309, 3462, 709, 1617, 1732, 3636,
			1188, 4562, 3476, 1119, 2945, 3166, 2354, 2955, 2819, 2415, 4488, 1397, 1045, 2407, 1988, 3443, 3260, 1143,
			2640, 4578, 4514, 3860, 2832, 4568, 2847, 3302, 1389, 2042, 4727, 3441, 4166, 1865, 2637, 1785, 386, 3165,
			385, 3748, 762, 2386, 1650, 2275, 4374, 5096, 1018, 2540, 885, 2927, 3217, 3609, 3224, 3840, 3899, 2784,
			4717, 2382, 1112, 232, 54, 2054, 2584, 3469, 5091, 1333, 2947, 3154, 2814, 496, 29, 94, 2290, 2805, 2914,
			2248, 2706, 1072, 240, 1260, 1373, 4004, 2110, 4230, 253, 2078, 378, 2523, 4480, 1876, 939, 4437, 3286,
			4599, 2222, 1928, 1498, 3996, 4801, 1747, 3599, 1023, 2656, 3905, 1858, 4186, 2581, 3571, 1377, 4890, 4828,
			2203, 3124, 2254, 2823, 2809, 1541, 3442, 2827, 3791, 2922, 4761, 3790, 2977, 1403, 1943, 1341, 225, 4115,
			1270, 3341, 308, 1515, 2590, 4965, 3762, 3052, 991, 3408, 2730, 60, 789, 2027, 1713, 2015, 45, 400, 2029,
			2007, 119, 567, 4410, 3423, 2886, 2317, 4223, 2075, 3046, 3951, 2097, 2294, 5092, 1164, 2020, 4185, 3480,
			4469, 2076, 1612, 1668, 3581, 1230, 2432, 2171, 4336, 948, 1585, 1465, 3218, 1911, 4409, 1940, 2802, 1472,
			4129, 1161, 1086, 4784, 2212, 1527, 367, 1366, 1121, 353, 785, 3416, 1345, 537, 1746, 1959, 3805, 1011,
			1232, 4456, 4545, 2331, 2968, 2396, 1832, 2091, 566, 64, 2942, 135, 3138, 1444, 3145, 3742, 2059, 4570, 371,
			4648, 3173, 332, 412, 4038, 1707, 2557, 1904, 4795, 3746, 4675, 613, 717, 526, 5008, 1869, 1191, 5088, 1602,
			1540, 3838, 624, 2051, 576, 3968, 373, 465, 4785, 13, 2369, 2518, 500, 441, 4563, 4264, 3430, 3988, 1996,
			4548, 3718, 2107, 1392, 2764, 2526, 2463, 1462, 865, 4692, 1757, 2348, 1223, 3878, 3287, 3845, 249, 3447,
			2919, 4658, 2187, 1958, 824, 882, 3236, 1610, 2128, 485, 1929, 893, 1107, 1319, 558, 1523, 781, 2021, 3043,
			5018, 4708, 1041, 2962, 653, 2179, 4744, 1199, 3283, 846, 563, 3804, 3481, 4142, 125, 4569, 3456, 994, 3322,
			3004, 103, 839, 5004, 3714, 2373, 268, 2983, 1166, 1412, 4681, 1656, 3378, 923, 2770, 4823, 557, 1450, 3274,
			4809, 2748, 2185, 3871, 3279, 3574, 4925, 2516, 4322, 470, 3573, 2169, 276, 4976, 5012, 2410, 2928, 1383,
			1932, 3444, 4147, 2010, 5043, 3058, 3323, 3078, 786, 3653, 4856, 1765, 3562, 1608, 4517, 1761, 1528, 4111,
			39, 4365, 501, 1180, 2975, 2157, 3560, 3198, 2168, 1387, 347, 4948, 4971, 2139, 4637, 3583, 3385, 4541,
			2208, 4025, 2437, 1327, 825, 4102, 4929, 1665, 953, 4435, 3454, 529, 4288, 4786, 860, 983, 3713, 1913, 166,
			157, 2121, 4498, 2726, 4423, 1582, 2979, 973, 763, 816, 749, 3817, 1073, 3431, 3381, 1315, 3427, 376, 2395,
			4237, 5105, 1239, 4533, 3371, 1879, 3126, 1369, 2529, 2327, 4911, 1467, 2899, 3585, 2307, 2793, 2949, 2920,
			4682, 1324, 2792, 2566, 1764, 1708, 4304, 4360, 3394, 1365, 4356, 4582, 498, 282, 4520, 793, 810, 2295,
			1343, 2314, 321, 1914, 604, 2272, 4808, 107, 2775, 2466, 1923, 4939, 1037, 1758, 4386, 1163, 3689, 806,
			4477, 3172, 3313, 4196, 4857, 4587, 3111, 165, 1594, 2170, 1348, 4002, 49, 495, 4616, 374, 3847, 3699, 430,
			3021, 1724, 2663, 1611, 3976, 4923, 799, 3047, 4139, 3825, 508, 1170, 1705, 104, 942, 2005, 1302, 2391, 750,
			1629, 3837, 4891, 3211, 2801, 745, 518, 3514, 1731, 338, 4011, 2817, 2987, 1196, 3709, 1503, 1562, 2359,
			3269, 4631, 1376, 4932, 2869, 372, 3180, 2305, 2921, 2662, 696, 628, 1695, 4633, 808, 4012, 1325, 2242,
			2060, 286, 982, 2296, 3489, 947, 4433, 4640, 2961, 4615, 4747, 564, 3388, 2253, 2256, 2273, 2634, 15, 4688,
			1937, 2834, 369, 1651, 4328, 2895, 645, 2351, 1321, 2475, 1033, 3650, 1622, 2258, 3129, 847, 3704, 1022,
			4969, 1906, 2626, 4273, 3373, 2676, 3798, 2131, 2111, 5123, 4992, 1909, 152, 1659, 738, 1083, 2430, 2280,
			2264, 3273, 3219, 1852, 731, 3696, 2644, 2885, 4699, 3776, 3214, 4826, 1154, 4938, 1505, 4805, 346, 3421,
			61, 4573, 3277, 1829, 448, 320, 1316, 2428, 4174, 1580, 1001, 3472, 482, 3445, 2532, 4626, 4233, 3386, 3188,
			4953, 3833, 3706, 1131, 1455, 2872, 4575, 4314, 158, 776, 272, 221, 1737, 4636, 890, 2718, 3048, 1122, 2053,
			4903, 2665, 1350, 1672, 4521, 219, 3849, 1963, 701, 220, 4325, 2262, 2409, 4214, 541, 2315, 16, 2542, 3683,
			4078, 1682, 1621, 3963, 5039, 2766, 971, 5102, 324, 1268, 1357, 4245, 3, 3311, 2150, 4612, 4497, 471, 1693,
			3867, 1480, 3407, 2366, 872, 2036, 4382, 1413, 205, 3962, 1859, 1259, 1194, 4590, 418, 2490, 5066, 4330,
			2064, 514, 3398, 164, 1711, 2115, 1782, 891, 5074, 4595, 4647, 4879, 3691, 101, 926, 4483, 2165, 2503, 4294,
			4872, 4765, 216, 2234, 2343, 4995, 1177, 2495, 3881, 2479, 614, 4558, 1339, 1026, 3076, 1182, 4479, 4866,
			2729, 426, 1318, 2468, 189, 4482, 2913, 3555, 198, 4864, 3937, 622, 4937, 105, 271, 136, 568, 3038, 1678,
			3128, 4285, 4668, 2639, 4389, 2524, 3994, 161, 3722, 3209, 3136, 4252, 3602, 26, 3550, 3025, 4707, 4641,
			2421, 812, 3797, 3648, 4714, 5079, 2991, 3756, 4775, 1559, 3687, 4537, 3152, 2611, 3477, 4355, 3642, 4010,
			2582, 2613, 452, 2311, 1427, 1694, 1374, 2831, 5100, 1276, 2588, 3970, 48, 1507, 2196, 3670, 4605, 1123,
			2871, 1643, 4906, 3987, 4006, 1908, 2000, 10, 516, 1079, 1689, 3531, 4399, 2477, 1407, 4680, 2837, 534,
			1434, 2023, 2912, 755, 3846, 4167, 4510, 631, 4704, 98, 1491, 3352, 3176, 3597, 1552, 1363, 1972, 1703,
			4738, 2852, 1597, 4806, 1128, 2049, 4448, 3553, 1021, 51, 1067, 4175, 1142, 3540, 4753, 2853, 1282, 4460,
			4407, 579, 4315, 3070, 1210, 494, 78, 695, 364, 5086, 162, 2939, 4299, 962, 843, 4362, 4817, 4260, 2765,
			2461, 1957, 4791, 930, 310, 4030, 4772, 714, 4671, 3927, 259, 538, 3247, 2744, 2106, 3355, 4638, 1949, 2277,
			3658, 4277, 1664, 3862, 1543, 3301, 4188, 2098, 2238, 1433, 4466, 2778, 1469, 2733, 842, 4527, 409, 4254,
			1029, 1292, 4539, 2144, 4358, 4555, 1406, 3853, 4854, 1012, 1151, 1464, 3827, 3146, 424, 3801, 990, 261,
			4949, 3782, 2082, 5072, 3278, 2376, 796, 5112, 4267, 133, 664, 4947, 2260, 2337, 1174, 3393, 4041, 5126,
			1936, 4213, 3455, 1712, 2050, 4846, 3163, 194, 1398, 3031, 446, 4116, 329, 657, 267, 934, 3505, 1535, 3606,
			2719, 4109, 965, 1652, 1100, 2701, 484, 2650, 3605, 1351, 1971, 1717, 1490, 84, 1390, 2878, 5047, 4066, 912,
			3763, 2696, 3345, 1845, 4899, 3364, 264, 3483, 2849, 4008, 4531, 3930, 2867, 3179, 4566, 112, 1524, 1831,
			5020, 2747, 3024, 4721, 2842, 1485, 1470, 1064, 1203, 4240, 4084, 1283, 3210, 3851, 4997, 1078, 1008, 2008,
			2651, 2338, 2073, 2813, 4690, 4990, 599, 2554, 4934, 4256, 153, 2116, 1548, 4463, 224, 4892, 1049, 880,
			2443, 569, 1206, 3204, 746, 1583, 32, 1881, 2163, 1250, 1561, 1052, 5055, 1521, 542, 910, 3184, 666, 3741,
			1168, 2182, 283, 1425, 4907, 5042, 2950, 2397, 556, 1635, 67, 3091, 2882, 3117, 2732, 1042, 2459, 1769,
			3317, 620, 3674, 1034, 3575, 922, 4191, 3435, 1620, 2012, 1683, 702, 694, 2992, 665, 4047, 615, 3772, 3591,
			53, 4731, 4942, 3850, 4287, 3568, 2236, 5122, 1605, 2089, 2822, 5017, 3182, 1579, 4718, 3294, 2375, 5009,
			2851, 3625, 2083, 4824, 43, 2438, 4670, 4525, 1976, 1449, 183, 2593, 3969, 2997, 4182, 141, 3289, 337, 3701,
			1204, 2794, 3281, 2776, 1954, 3276, 4724, 287, 3192, 1006, 3245, 4385, 1588, 203, 438, 3413, 2717, 3566,
			3897, 3389, 2065, 460, 149, 4258, 4767, 4567, 998, 4475, 772, 9, 1601, 895, 3089, 1179, 4604, 295, 1772,
			2735, 1287, 3082, 4421, 3297, 4706, 1822, 4989, 4250, 639, 4674, 5087, 4092, 1454, 2661, 3060, 4305, 3744,
			2958, 2738, 3234, 3681, 2158, 3153, 3516, 2741, 4093, 356, 4839, 1669, 1556, 2197, 719, 4494, 417, 668,
			3081, 4039, 3541, 1152, 641, 2103, 4663, 1586, 2564, 533, 2943, 4984, 1211, 4481, 4094, 1615, 126, 705,
			1952, 3873, 3411, 4394, 4099, 4136, 1843, 4055, 1834, 3740, 3392, 4027, 778, 4411, 2721, 2686, 2302, 2769,
			25, 3023, 3139, 4040, 3011, 4725, 2911, 4958, 4898, 1981, 1419, 209, 1251, 3068, 4274, 2198, 864, 2384,
			5065, 89, 3343, 4859, 963, 415, 80, 5054, 280, 4291, 4927, 1673, 1941, 1474, 803, 3877, 3743, 1367, 4745,
			5011, 979, 3400, 2807, 716, 2858, 2550, 5114, 2299, 1253, 2887, 2188, 2017, 4679, 3736, 315, 3488, 598,
			2448, 2993, 1684, 3458, 3290, 1278, 3361, 4794, 532, 1355, 237, 4318, 2446, 4218, 1727, 2177, 2521, 3470,
			4183, 2972, 88, 3923, 2850, 2436, 4547, 30, 969, 4189, 642, 2773, 1898, 3577, 1057, 4465, 1288, 4020, 2214,
			397, 3348, 2151, 4371, 3995, 352, 2449, 3769, 1265, 1489, 2567, 2192, 3110, 2930, 4146, 2954, 1948, 2205,
			2077, 3613, 455, 3507, 3148, 3426, 2720, 917, 506, 4603, 802, 4685, 1714, 3342, 4338, 4239, 3027, 3556, 173,
			680, 1404, 304, 3118, 3257, 3811, 1623, 4627, 1570, 2136, 2261, 5027, 236, 2462, 1114, 1956, 3666, 2555,
			834, 4453, 682, 4763, 359, 4580, 2135, 2037, 4502, 3457, 3390, 1027, 445, 1062, 2520, 1685, 52, 1130, 1016,
			2795, 4265, 4630, 3809, 3018, 4549, 4509, 2342, 5106, 3282, 1730, 1295, 678, 913, 1874, 2381, 3123, 627,
			427, 813, 2398, 737, 3137, 1657, 2716, 651, 769, 4625, 2389, 3156, 383, 4243, 2497, 3020, 3436, 2994, 4904,
			4022, 3471, 742, 3524, 1991, 2284, 1512, 1882, 2134, 3272, 4438, 3369, 1604, 3293, 3528, 1252, 2353, 4870,
			4419, 575, 2403, 4742, 4840, 3527, 2411, 479, 4332, 4043, 788, 361, 4705, 512, 2799, 4199, 2320, 4933, 3412,
			3917, 3793, 989, 55, 2445, 2715, 1471, 4624, 4321, 734, 3693, 957, 3197, 1569, 2841, 1101, 1715, 3724, 1411,
			2038, 2512, 4100, 1173, 2271, 2559, 2953, 646, 1335, 2431, 5053, 429, 2561, 1234, 4848, 829, 1461, 4377,
			2967, 3977, 3054, 145, 4484, 524, 5118, 3842, 977, 4564, 4016, 2090, 17, 1148, 3479, 4837, 4732, 2675, 1754,
			2392, 2636, 4843, 3858, 4127, 2232, 5006, 992, 3888, 3654, 56, 3395, 1751, 1297, 4319, 4352, 4056, 4789,
			2321, 1284, 3511, 836, 5119, 4192, 1359, 2755, 3747, 522, 4764, 1266, 4396, 2252, 3812, 4613, 5071, 1687,
			31, 4160, 4565, 345, 3451, 3535, 151, 4068, 229, 863, 292, 2527, 551, 312, 1690, 3697, 3107, 4075, 1809,
			2988, 2190, 3823, 458, 4241, 3906, 2227, 2235, 4172, 3498, 1835, 3665, 2996, 2316, 3950, 2723, 1830, 961,
			3896, 1663, 217, 344, 4574, 2022, 4390, 4812, 3019, 2873, 1296, 4975, 3598, 4661, 4777, 38, 4023, 4064,
			3911, 1510, 1575, 2239, 2352, 677, 76, 4768, 617, 1946, 3424, 4684, 1497, 3337, 4576, 4987, 3461, 3006, 358,
			1794, 2378, 3727, 4242, 3633, 2249, 79, 2695, 674, 366, 1051, 3530, 2101, 2670, 704, 336, 454, 4451, 2646,
			4489, 2243, 3572, 3370, 2104, 3344, 2427, 4771, 1435, 5019, 4886, 3999, 3548, 3647, 2830, 3350, 4702, 4302,
			2047, 486, 69, 2655, 3090, 3634, 4087, 436, 1853, 3127, 2896, 1222, 4177, 384, 2125, 916, 3761, 3932, 3130,
			3584, 3017, 1089, 4552, 3207, 2160, 1854, 3467, 2289, 2691, 433, 1808, 73, 2957, 1097, 3368, 2863, 3640,
			3409, 3419, 2576, 3292, 404, 3016, 2009, 4339, 1061, 1299, 3965, 3792, 681, 3619, 2600, 3096, 4513, 667,
			4695, 4863, 1116, 3074, 1733, 2002, 634, 3253, 2270, 90, 387, 3979, 3895, 4402, 2556, 4424, 4847, 467, 2224,
			1088, 3863, 66, 4739, 1080, 3067, 3774, 907, 1901, 2024, 257, 1274, 3258, 647, 1388, 1010, 1762, 3588, 3100,
			2306, 873, 2266, 1893, 4916, 3569, 159, 972, 1557, 1448, 392, 4168, 3992, 732, 4203, 2824, 1396, 4800, 3365,
			2112, 362, 1872, 3802, 3300, 2367, 2705, 3703, 1096, 3075, 3450, 3200, 2370, 2283, 2803, 1426, 4430, 2528,
			1985, 4378, 2727, 4634, 2531, 4060, 2499, 4152, 4104, 3428, 2129, 1626, 3325, 328, 1846, 670, 1035, 4073,
			143, 4635, 1375, 3466, 3621, 3151, 1509, 580, 5028, 4676, 782, 4097, 2467, 504, 2161, 1153, 3232, 4381,
			4427, 1247, 3319, 3922, 3786, 1120, 4074, 2552, 1755, 1520, 1676, 4464, 399, 1648, 1951, 4059, 1677, 5084,
			3039, 3042, 3086, 521, 1447, 1721, 3073, 1522, 3595, 3757, 1696, 2, 925, 3537, 1992, 2336, 3868, 4945, 1532,
			5069, 572, 507, 1286, 2175, 3186, 389, 2806, 3765, 1750, 5068, 2387, 4885, 3943, 724, 1000, 3925, 3982,
			4687, 1654, 3008, 131, 1749, 3608, 4290, 2335, 3680, 5007, 4722, 519, 1267, 4320, 1184, 2293, 2530, 3865,
			752, 1429, 723, 1878, 1930, 720, 2200, 632, 75, 3299, 4585, 2898, 3731, 597, 3931, 318, 3920, 2301, 4425,
			4013, 428, 1735, 1813, 1777, 5099, 4600, 3941, 1700, 2612, 3626, 881, 4751, 478, 3807, 2545, 3420, 2888,
			4392, 1880, 293, 3240, 4033, 3266, 303, 4820, 2788, 3465, 3494, 1955, 4895, 1697, 1391, 1691, 3652, 4878,
			4798, 4955, 2731, 1249, 528, 2176, 1900, 1466, 2095, 822, 5121, 1915, 561, 3251, 3646, 946, 2689, 5001,
			2752, 4959, 2909, 5073, 3452, 1189, 2714, 4869, 3376, 2199, 419, 609, 4244, 649, 4316, 4960, 5111, 4171,
			4080, 4913, 20, 2783, 4665, 1028, 3525, 3719, 3375, 340, 2692, 1555, 4584, 2959, 4760, 2173, 1003, 4779,
			2269, 2279, 394, 1125, 1183, 4610, 390, 747, 2043, 3859, 1628, 2604, 215, 4268, 2900, 3685, 91, 1248, 1159,
			4085, 3902, 3711, 3728, 603, 3669, 4749, 1632, 794, 184, 2821, 210, 116, 3065, 4720, 2118, 4678, 1810, 260,
			2345, 144, 3159, 5067, 1242, 1409, 2698, 4598, 3638, 3063, 395, 4112, 3816, 780, 3935, 4804, 4306, 2779,
			1993, 2408, 2319, 2513, 1093, 97, 3542, 2838, 1414, 920, 1734, 3380, 442, 3239, 4499, 3149, 2677, 637, 3425,
			3125, 4207, 3820, 699, 1567, 4391, 3667, 976, 2237, 1108, 2843, 2510, 595, 4782, 256, 906, 2948, 4608, 4546,
			2223, 1547, 1218, 798, 2485, 3618, 1706, 3334, 1075, 659, 2440, 3035, 4442, 1442, 3492, 227, 2298, 3141,
			4163, 3231, 3929, 1017, 58, 37, 2833, 2142, 1499, 586, 1352, 2178, 589, 1788, 1840, 70, 4750, 4583, 619,
			3222, 4212, 1240, 1791, 1256, 5059, 4667, 2113, 2213, 1055, 1816, 403, 4897, 2456, 1680, 4540, 3737, 1655,
			4367, 2693, 2035, 2669, 1647, 231, 1071, 3720, 1081, 2308, 3758, 3886, 3656, 1181, 1482, 660, 985, 3349,
			4672, 3351, 3113, 1236, 5034, 3161, 3708, 4802, 784, 3884, 1342, 2356, 3759, 4946, 274, 2632, 2981, 4711,
			4793, 42, 1098, 515, 7, 2132, 1989, 4248, 2350, 941, 758, 1537, 204, 1133, 416, 2679, 1186, 2628, 4666, 248,
			3177, 3944, 773, 2724, 3401, 1329, 4602, 1565, 3508, 3306, 102, 1887, 3013, 2086, 2845, 142, 2204, 1983,
			3010, 3777, 585, 3422, 840, 2501, 4114, 2250, 2685, 202, 4589, 1307, 520, 1420, 4342, 583, 246, 2995, 3694,
			2003, 1674, 966, 3684, 4044, 3655, 3835, 3517, 2228, 4295, 1973, 4530, 5022, 5108, 3347, 1494, 2246, 4774,
			3106, 1460, 2551, 2648, 130, 106, 413, 1783, 1574, 3404, 4229, 3939, 1927, 1304, 1015, 2750, 330, 4902,
			2864, 4811, 2762, 4993, 4972, 2844, 1441, 234, 46, 244, 4329, 4586, 2879, 4818, 1456, 5070, 2897, 333, 955,
			2031, 2666, 5097, 1775, 2013, 4646, 4500, 1207, 3887, 2469, 4361, 4195, 2281, 4449, 3543, 4490, 1517, 4187,
			559, 50, 1394, 238, 4740, 1416, 380, 1818, 4543, 1851, 1238, 1400, 2470, 2569, 3901, 34, 4246, 959, 4974,
			1894, 1699, 899, 4261, 4235, 1317, 2346, 1058, 3601, 2094, 4401, 3784, 1059, 99, 4905, 4083, 1598, 2901,
			4512, 2322, 1945, 1244, 2638, 317, 2420, 2907, 168, 2891, 319, 3729, 3512, 1534, 4422, 4224, 1303, 1328,
			2537, 3990, 1477, 809, 4507, 1839, 1193, 4089, 1007, 2883, 1675, 4596, 199, 1995, 4733 };

	@Override
	public String getDescription() {
		return this.description;
	}
	
	public void setDescription(String description) {
		this.description = description;
	}
}
